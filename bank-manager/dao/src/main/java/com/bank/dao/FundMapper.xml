<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.dao.FundMapper" >
  <resultMap id="BaseResultMap" type="com.bank.po.Fund" >
    <id column="fund_id" property="fundId" jdbcType="INTEGER" />
    <result column="fund_code" property="fundCode" jdbcType="BIGINT" />
    <result column="fund_name" property="fundName" jdbcType="VARCHAR" />
    <result column="currency_type" property="currencyType" jdbcType="INTEGER" />
    <result column="fund_type" property="fundType" jdbcType="INTEGER" />
    <result column="fund_style" property="fundStyle" jdbcType="INTEGER" />
    <result column="issue_date" property="issueDate" jdbcType="VARCHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
    <result column="fund_user_id" property="fundUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fund_id, fund_code, fund_name, currency_type, fund_type, fund_style, issue_date, 
    unit_price, fund_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bank.po.FundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fund
    where fund_id = #{fundId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fund
    where fund_id = #{fundId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.po.FundExample" >
    delete from fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.po.Fund" >
    insert into fund (fund_id, fund_code, fund_name, 
      currency_type, fund_type, fund_style, 
      issue_date, unit_price, fund_user_id
      )
    values (#{fundId,jdbcType=INTEGER}, #{fundCode,jdbcType=BIGINT}, #{fundName,jdbcType=VARCHAR}, 
      #{currencyType,jdbcType=INTEGER}, #{fundType,jdbcType=INTEGER}, #{fundStyle,jdbcType=INTEGER}, 
      #{issueDate,jdbcType=VARCHAR}, #{unitPrice,jdbcType=DOUBLE}, #{fundUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bank.po.Fund" >
    insert into fund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fundId != null" >
        fund_id,
      </if>
      <if test="fundCode != null" >
        fund_code,
      </if>
      <if test="fundName != null" >
        fund_name,
      </if>
      <if test="currencyType != null" >
        currency_type,
      </if>
      <if test="fundType != null" >
        fund_type,
      </if>
      <if test="fundStyle != null" >
        fund_style,
      </if>
      <if test="issueDate != null" >
        issue_date,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="fundUserId != null" >
        fund_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fundId != null" >
        #{fundId,jdbcType=INTEGER},
      </if>
      <if test="fundCode != null" >
        #{fundCode,jdbcType=BIGINT},
      </if>
      <if test="fundName != null" >
        #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="currencyType != null" >
        #{currencyType,jdbcType=INTEGER},
      </if>
      <if test="fundType != null" >
        #{fundType,jdbcType=INTEGER},
      </if>
      <if test="fundStyle != null" >
        #{fundStyle,jdbcType=INTEGER},
      </if>
      <if test="issueDate != null" >
        #{issueDate,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="fundUserId != null" >
        #{fundUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.po.FundExample" resultType="java.lang.Integer" >
    select count(*) from fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fund
    <set >
      <if test="record.fundId != null" >
        fund_id = #{record.fundId,jdbcType=INTEGER},
      </if>
      <if test="record.fundCode != null" >
        fund_code = #{record.fundCode,jdbcType=BIGINT},
      </if>
      <if test="record.fundName != null" >
        fund_name = #{record.fundName,jdbcType=VARCHAR},
      </if>
      <if test="record.currencyType != null" >
        currency_type = #{record.currencyType,jdbcType=INTEGER},
      </if>
      <if test="record.fundType != null" >
        fund_type = #{record.fundType,jdbcType=INTEGER},
      </if>
      <if test="record.fundStyle != null" >
        fund_style = #{record.fundStyle,jdbcType=INTEGER},
      </if>
      <if test="record.issueDate != null" >
        issue_date = #{record.issueDate,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.fundUserId != null" >
        fund_user_id = #{record.fundUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fund
    set fund_id = #{record.fundId,jdbcType=INTEGER},
      fund_code = #{record.fundCode,jdbcType=BIGINT},
      fund_name = #{record.fundName,jdbcType=VARCHAR},
      currency_type = #{record.currencyType,jdbcType=INTEGER},
      fund_type = #{record.fundType,jdbcType=INTEGER},
      fund_style = #{record.fundStyle,jdbcType=INTEGER},
      issue_date = #{record.issueDate,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      fund_user_id = #{record.fundUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.po.Fund" >
    update fund
    <set >
      <if test="fundCode != null" >
        fund_code = #{fundCode,jdbcType=BIGINT},
      </if>
      <if test="fundName != null" >
        fund_name = #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="currencyType != null" >
        currency_type = #{currencyType,jdbcType=INTEGER},
      </if>
      <if test="fundType != null" >
        fund_type = #{fundType,jdbcType=INTEGER},
      </if>
      <if test="fundStyle != null" >
        fund_style = #{fundStyle,jdbcType=INTEGER},
      </if>
      <if test="issueDate != null" >
        issue_date = #{issueDate,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="fundUserId != null" >
        fund_user_id = #{fundUserId,jdbcType=INTEGER},
      </if>
    </set>
    where fund_id = #{fundId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.po.Fund" >
    update fund
    set fund_code = #{fundCode,jdbcType=BIGINT},
      fund_name = #{fundName,jdbcType=VARCHAR},
      currency_type = #{currencyType,jdbcType=INTEGER},
      fund_type = #{fundType,jdbcType=INTEGER},
      fund_style = #{fundStyle,jdbcType=INTEGER},
      issue_date = #{issueDate,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      fund_user_id = #{fundUserId,jdbcType=INTEGER}
    where fund_id = #{fundId,jdbcType=INTEGER}
  </update>
</mapper>