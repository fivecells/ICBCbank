<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.TransferdetailMapper">
  <resultMap id="BaseResultMap" type="com.bank.po.Transferdetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="accept_name" jdbcType="VARCHAR" property="acceptName" />
    <result column="accept_account" jdbcType="INTEGER" property="acceptAccount" />
    <result column="accept_bank" jdbcType="VARCHAR" property="acceptBank" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="pay_account" jdbcType="INTEGER" property="payAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, accept_name, accept_account, accept_bank, money, createtime, pay_account
  </sql>
  <select id="selectByExample" parameterType="com.bank.po.TransferdetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transferdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transferdetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transferdetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.po.TransferdetailExample">
    delete from transferdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.po.Transferdetail">
    insert into transferdetail (id, accept_name, accept_account, 
      accept_bank, money, createtime, 
      pay_account)
    values (#{id,jdbcType=INTEGER}, #{acceptName,jdbcType=VARCHAR}, #{acceptAccount,jdbcType=INTEGER}, 
      #{acceptBank,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{createtime,jdbcType=TIMESTAMP}, 
      #{payAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.po.Transferdetail">
    insert into transferdetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="acceptName != null">
        accept_name,
      </if>
      <if test="acceptAccount != null">
        accept_account,
      </if>
      <if test="acceptBank != null">
        accept_bank,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="payAccount != null">
        pay_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="acceptName != null">
        #{acceptName,jdbcType=VARCHAR},
      </if>
      <if test="acceptAccount != null">
        #{acceptAccount,jdbcType=INTEGER},
      </if>
      <if test="acceptBank != null">
        #{acceptBank,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.po.TransferdetailExample" resultType="java.lang.Long">
    select count(*) from transferdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transferdetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.acceptName != null">
        accept_name = #{record.acceptName,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptAccount != null">
        accept_account = #{record.acceptAccount,jdbcType=INTEGER},
      </if>
      <if test="record.acceptBank != null">
        accept_bank = #{record.acceptBank,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payAccount != null">
        pay_account = #{record.payAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transferdetail
    set id = #{record.id,jdbcType=INTEGER},
      accept_name = #{record.acceptName,jdbcType=VARCHAR},
      accept_account = #{record.acceptAccount,jdbcType=INTEGER},
      accept_bank = #{record.acceptBank,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      pay_account = #{record.payAccount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.po.Transferdetail">
    update transferdetail
    <set>
      <if test="acceptName != null">
        accept_name = #{acceptName,jdbcType=VARCHAR},
      </if>
      <if test="acceptAccount != null">
        accept_account = #{acceptAccount,jdbcType=INTEGER},
      </if>
      <if test="acceptBank != null">
        accept_bank = #{acceptBank,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAccount != null">
        pay_account = #{payAccount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.po.Transferdetail">
    update transferdetail
    set accept_name = #{acceptName,jdbcType=VARCHAR},
      accept_account = #{acceptAccount,jdbcType=INTEGER},
      accept_bank = #{acceptBank,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      pay_account = #{payAccount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>